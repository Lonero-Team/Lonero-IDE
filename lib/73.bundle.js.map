{"version":3,"sources":["webpack:///./node_modules/@theia/plugin-ext-vscode/src/browser/plugin-vscode-commands-contribution.ts","webpack:///./node_modules/@theia/plugin-ext-vscode/src/browser/plugin-vscode-frontend-module.ts"],"names":[],"mappings":"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","file":"73.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Command, CommandContribution, CommandRegistry, ResourceProvider } from '@theia/core';\nimport {\n    ApplicationShell,\n    CommonCommands,\n    NavigatableWidget,\n    open,\n    OpenerService,\n    PrefixQuickOpenService,\n    Saveable\n} from '@theia/core/lib/browser';\nimport { ContextKeyService } from '@theia/core/lib/browser/context-key-service';\nimport { ApplicationShellMouseTracker } from '@theia/core/lib/browser/shell/application-shell-mouse-tracker';\nimport { CommandService } from '@theia/core/lib/common/command';\nimport TheiaURI from '@theia/core/lib/common/uri';\nimport { EditorManager } from '@theia/editor/lib/browser';\nimport { CodeEditorWidget } from '@theia/plugin-ext/lib/main/browser/menus/menus-contribution-handler';\nimport {\n    TextDocumentShowOptions,\n    Location,\n    CallHierarchyItem,\n    CallHierarchyIncomingCall,\n    CallHierarchyOutgoingCall\n} from '@theia/plugin-ext/lib/common/plugin-api-rpc-model';\nimport { DocumentsMainImpl } from '@theia/plugin-ext/lib/main/browser/documents-main';\nimport { createUntitledURI } from '@theia/plugin-ext/lib/main/browser/editor/untitled-resource';\nimport { toDocumentSymbol } from '@theia/plugin-ext/lib/plugin/type-converters';\nimport { ViewColumn } from '@theia/plugin-ext/lib/plugin/types-impl';\nimport { WorkspaceCommands } from '@theia/workspace/lib/browser';\nimport { WorkspaceService, WorkspaceInput } from '@theia/workspace/lib/browser/workspace-service';\nimport { DiffService } from '@theia/workspace/lib/browser/diff-service';\nimport { MonacoEditor } from '@theia/monaco/lib/browser/monaco-editor';\nimport { inject, injectable } from 'inversify';\nimport { Position } from '@theia/plugin-ext/lib/common/plugin-api-rpc';\nimport URI from 'vscode-uri';\n\nexport namespace VscodeCommands {\n    export const OPEN: Command = {\n        id: 'vscode.open'\n    };\n\n    export const OPEN_FOLDER: Command = {\n        id: 'vscode.openFolder'\n    };\n\n    export const DIFF: Command = {\n        id: 'vscode.diff'\n    };\n\n    export const SET_CONTEXT: Command = {\n        id: 'setContext'\n    };\n}\n\n@injectable()\nexport class PluginVscodeCommandsContribution implements CommandContribution {\n    @inject(CommandService)\n    protected readonly commandService: CommandService;\n    @inject(ContextKeyService)\n    protected readonly contextKeyService: ContextKeyService;\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n    @inject(ResourceProvider)\n    protected readonly resources: ResourceProvider;\n    @inject(DiffService)\n    protected readonly diffService: DiffService;\n    @inject(OpenerService)\n    protected readonly openerService: OpenerService;\n    @inject(ApplicationShellMouseTracker)\n    protected readonly mouseTracker: ApplicationShellMouseTracker;\n    @inject(PrefixQuickOpenService)\n    protected readonly quickOpen: PrefixQuickOpenService;\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(VscodeCommands.OPEN, {\n            isVisible: () => false,\n            execute: async (resource: URI, columnOrOptions?: ViewColumn | TextDocumentShowOptions) => {\n                if (!resource) {\n                    throw new Error(`${VscodeCommands.OPEN.id} command requires at least URI argument.`);\n                }\n                if (!URI.isUri(resource)) {\n                    throw new Error(`Invalid argument for ${VscodeCommands.OPEN.id} command with URI argument. Found ${resource}`);\n                }\n\n                let options: TextDocumentShowOptions | undefined;\n                if (typeof columnOrOptions === 'number') {\n                    options = {\n                        viewColumn: columnOrOptions\n                    };\n                } else if (columnOrOptions) {\n                    options = {\n                        ...columnOrOptions\n                    };\n                }\n                const editorOptions = DocumentsMainImpl.toEditorOpenerOptions(this.shell, options);\n                await open(this.openerService, new TheiaURI(resource), editorOptions);\n            }\n        });\n\n        interface IOpenFolderAPICommandOptions {\n            forceNewWindow?: boolean;\n            forceReuseWindow?: boolean;\n            noRecentEntry?: boolean;\n        }\n\n        commands.registerCommand(VscodeCommands.OPEN_FOLDER, {\n            isVisible: () => false,\n            execute: async (resource?: URI, arg: boolean | IOpenFolderAPICommandOptions = {}) => {\n                if (!resource) {\n                    return commands.executeCommand(WorkspaceCommands.OPEN_WORKSPACE.id);\n                }\n                if (!URI.isUri(resource)) {\n                    throw new Error(`Invalid argument for ${VscodeCommands.OPEN_FOLDER.id} command with URI argument. Found ${resource}`);\n                }\n                let options: WorkspaceInput | undefined;\n                if (typeof arg === 'boolean') {\n                    options = { preserveWindow: !arg };\n                } else {\n                    options = { preserveWindow: !arg.forceNewWindow };\n                }\n                this.workspaceService.open(new TheiaURI(resource), options);\n            }\n        });\n\n        commands.registerCommand(VscodeCommands.DIFF, {\n            isVisible: () => false,\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            execute: async (left: URI, right: URI, label?: string, options?: TextDocumentShowOptions) => {\n                if (!left || !right) {\n                    throw new Error(`${VscodeCommands.DIFF} command requires at least two URI arguments. Found left=${left}, right=${right} as arguments`);\n                }\n                if (!URI.isUri(left)) {\n                    throw new Error(`Invalid argument for ${VscodeCommands.DIFF.id} command with left argument. Expecting URI left type but found ${left}`);\n                }\n                if (!URI.isUri(right)) {\n                    throw new Error(`Invalid argument for ${VscodeCommands.DIFF.id} command with right argument. Expecting URI right type but found ${right}`);\n                }\n\n                const leftURI = new TheiaURI(left);\n                const editorOptions = DocumentsMainImpl.toEditorOpenerOptions(this.shell, options);\n                await this.diffService.openDiffEditor(leftURI, new TheiaURI(right), label, editorOptions);\n            }\n        });\n\n        commands.registerCommand(VscodeCommands.SET_CONTEXT, {\n            isVisible: () => false,\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            execute: (contextKey: any, contextValue: any) => {\n                this.contextKeyService.createKey(String(contextKey), contextValue);\n            }\n        });\n\n        // https://code.visualstudio.com/docs/getstarted/keybindings#_navigation\n        /*\n         * internally, in VS Code, any widget opened in the main area is represented as an editor\n         * operations below apply to them, but not to side-bar widgets, like the explorer\n         *\n         * in Theia, there are not such difference and any widget can be put in any area\n         * because of it we filter out editors from views based on `NavigatableWidget.is`\n         * and apply actions only to them\n         */\n        commands.registerCommand({ id: 'workbench.action.files.newUntitledFile' }, {\n            execute: () => open(this.openerService, createUntitledURI())\n        });\n        commands.registerCommand({ id: 'workbench.action.files.openFile' }, {\n            execute: () => commands.executeCommand(WorkspaceCommands.OPEN_FILE.id)\n        });\n        commands.registerCommand({ id: 'workbench.action.files.openFolder' }, {\n            execute: () => commands.executeCommand(WorkspaceCommands.OPEN_FOLDER.id)\n        });\n        commands.registerCommand({ id: 'workbench.action.gotoLine' }, {\n            execute: () => commands.executeCommand('editor.action.gotoLine')\n        });\n        commands.registerCommand({ id: 'actions.find' }, {\n            execute: () => commands.executeCommand(CommonCommands.FIND.id)\n        });\n        commands.registerCommand({ id: 'undo' }, {\n            execute: () => commands.executeCommand(CommonCommands.UNDO.id)\n        });\n        commands.registerCommand({ id: 'editor.action.startFindReplaceAction' }, {\n            execute: () => commands.executeCommand(CommonCommands.REPLACE.id)\n        });\n        commands.registerCommand({ id: 'workbench.action.quickOpen' }, {\n            execute: () => this.quickOpen.open('')\n        });\n        commands.registerCommand({ id: 'default:type' }, {\n            execute: args => {\n                const editor = MonacoEditor.getCurrent(this.editorManager);\n                if (editor) {\n                    editor.trigger('keyboard', 'type', args);\n                }\n            }\n        });\n        commands.registerCommand({ id: 'workbench.action.files.save', }, {\n            execute: (uri?: monaco.Uri) => {\n                if (uri) {\n                    const uriString = uri.toString();\n                    const widget = this.shell.widgets.find(w => {\n                        const resourceUri = Saveable.is(w) && NavigatableWidget.is(w) && w.getResourceUri();\n                        return (resourceUri && resourceUri.toString()) === uriString;\n                    });\n                    if (Saveable.is(widget)) {\n                        Saveable.save(widget);\n                    }\n                } else {\n                    this.shell.save();\n                }\n            }\n        });\n        commands.registerCommand({ id: 'workbench.action.files.saveAll', }, {\n            execute: () => this.shell.saveAll()\n        });\n        commands.registerCommand({ id: 'workbench.action.closeActiveEditor' }, {\n            execute: (uri?: monaco.Uri) => {\n                let widget = this.editorManager.currentEditor || this.shell.currentWidget;\n                if (uri) {\n                    const uriString = uri.toString();\n                    widget = this.shell.widgets.find(w => {\n                        const resourceUri = NavigatableWidget.is(w) && w.getResourceUri();\n                        return (resourceUri && resourceUri.toString()) === uriString;\n                    });\n                }\n                if (CodeEditorWidget.is(widget)) {\n                    widget.close();\n                }\n            }\n        });\n        commands.registerCommand({ id: 'workbench.action.closeOtherEditors' }, {\n            execute: (uri?: monaco.Uri) => {\n                let editor = this.editorManager.currentEditor || this.shell.currentWidget;\n                if (uri) {\n                    const uriString = uri.toString();\n                    editor = this.editorManager.all.find(e => {\n                        const resourceUri = e.getResourceUri();\n                        return (resourceUri && resourceUri.toString()) === uriString;\n                    });\n                }\n                for (const widget of this.shell.widgets) {\n                    if (CodeEditorWidget.is(widget) && widget !== editor) {\n                        widget.close();\n                    }\n                }\n            }\n        });\n        commands.registerCommand({ id: 'workbench.action.closeEditorsInGroup' }, {\n            execute: (uri?: monaco.Uri) => {\n                let editor = this.editorManager.currentEditor || this.shell.currentWidget;\n                if (uri) {\n                    const uriString = uri.toString();\n                    editor = this.editorManager.all.find(e => {\n                        const resourceUri = e.getResourceUri();\n                        return (resourceUri && resourceUri.toString()) === uriString;\n                    });\n                }\n                if (editor) {\n                    const tabBar = this.shell.getTabBarFor(editor);\n                    if (tabBar) {\n                        this.shell.closeTabs(tabBar,\n                            ({ owner }) => CodeEditorWidget.is(owner)\n                        );\n                    }\n                }\n            }\n        });\n        commands.registerCommand({ id: 'workbench.action.closeEditorsInOtherGroups' }, {\n            execute: () => {\n                const editor = this.editorManager.currentEditor || this.shell.currentWidget;\n                if (editor) {\n                    const editorTabBar = this.shell.getTabBarFor(editor);\n                    for (const tabBar of this.shell.allTabBars) {\n                        if (tabBar !== editorTabBar) {\n                            this.shell.closeTabs(tabBar,\n                                ({ owner }) => CodeEditorWidget.is(owner)\n                            );\n                        }\n                    }\n                }\n            }\n        });\n        commands.registerCommand({ id: 'workbench.action.closeEditorsToTheLeft' }, {\n            execute: () => {\n                const editor = this.editorManager.currentEditor || this.shell.currentWidget;\n                if (editor) {\n                    const tabBar = this.shell.getTabBarFor(editor);\n                    if (tabBar) {\n                        let left = true;\n                        this.shell.closeTabs(tabBar,\n                            ({ owner }) => {\n                                if (owner === editor) {\n                                    left = false;\n                                    return false;\n                                }\n                                return left && CodeEditorWidget.is(owner);\n                            }\n                        );\n                    }\n                }\n            }\n        });\n        commands.registerCommand({ id: 'workbench.action.closeEditorsToTheRight' }, {\n            execute: () => {\n                const editor = this.editorManager.currentEditor || this.shell.currentWidget;\n                if (editor) {\n                    const tabBar = this.shell.getTabBarFor(editor);\n                    if (tabBar) {\n                        let left = true;\n                        this.shell.closeTabs(tabBar,\n                            ({ owner }) => {\n                                if (owner === editor) {\n                                    left = false;\n                                    return false;\n                                }\n                                return !left && CodeEditorWidget.is(owner);\n                            }\n                        );\n                    }\n                }\n            }\n        });\n        commands.registerCommand({ id: 'workbench.action.closeAllEditors' }, {\n            execute: () => {\n                for (const widget of this.shell.widgets) {\n                    if (CodeEditorWidget.is(widget)) {\n                        widget.close();\n                    }\n                }\n            }\n        });\n\n        commands.registerCommand({ id: 'workbench.action.reloadWindow' }, {\n            execute: () => {\n                window.location.reload();\n            }\n        });\n\n        /**\n         * TODO:\n         * Keep Open\tworkbench.action.keepEditor\n         * Open Next\tworkbench.action.openNextRecentlyUsedEditorInGroup\n         * Open Previous\tworkbench.action.openPreviousRecentlyUsedEditorInGroup\n         * Copy Path of Active File\tworkbench.action.files.copyPathOfActiveFile\n         * Reveal Active File in Windows\tworkbench.action.files.revealActiveFileInWindows\n         * Show Opened File in New Window\tworkbench.action.files.showOpenedFileInNewWindow\n         * Compare Opened File With\tworkbench.files.action.compareFileWith\n         */\n\n        // Register built-in language service commands\n        // see https://code.visualstudio.com/api/references/commands\n        /* eslint-disable @typescript-eslint/no-explicit-any */\n        commands.registerCommand(\n            {\n                id: 'vscode.executeDocumentSymbolProvider'\n            },\n            {\n                execute: (resource: URI) => commands.executeCommand('_executeDocumentSymbolProvider',\n                    { resource: monaco.Uri.parse(resource.toString()) }\n                ).then((value: any) => { // eslint-disable-line @typescript-eslint/no-explicit-any\n                    if (!Array.isArray(value) || value === undefined) {\n                        return undefined;\n                    }\n                    return value.map(loc => toDocumentSymbol(loc));\n                })\n            }\n        );\n\n        // TODO register other `vscode.execute...` commands.\n        // see https://github.com/microsoft/vscode/blob/master/src/vs/workbench/api/common/extHostApiCommands.ts\n        commands.registerCommand(\n            {\n                id: 'vscode.executeReferenceProvider'\n            },\n            {\n                execute: ((resource: URI, position: Position) => {\n                    const args = {\n                        resource: monaco.Uri.from(resource),\n                        position: position\n                    };\n                    return commands.executeCommand<Location[]>('_executeReferenceProvider', args);\n                })\n            }\n        );\n        commands.registerCommand(\n            {\n                id: 'vscode.executeImplementationProvider'\n            },\n            {\n                execute: ((resource: URI, position: Position) => {\n                    const args = {\n                        resource: monaco.Uri.from(resource),\n                        position: position\n                    };\n                    return commands.executeCommand<Location[]>('_executeImplementationProvider', args);\n                })\n            }\n        );\n        commands.registerCommand(\n            {\n                id: 'vscode.prepareCallHierarchy'\n            },\n            {\n                execute: ((resource: URI, position: Position) => {\n                    const args = {\n                        resource: monaco.Uri.from(resource),\n                        position: position\n                    };\n                    return commands.executeCommand<CallHierarchyItem[]>('_executePrepareCallHierarchy', args);\n                })\n            }\n        );\n        commands.registerCommand(\n            {\n                id: 'vscode.provideIncomingCalls'\n            },\n            {\n                execute: ((item: CallHierarchyItem) =>\n                    commands.executeCommand<CallHierarchyIncomingCall[]>('_executeProvideIncomingCalls', { item }))\n            }\n        );\n        commands.registerCommand(\n            {\n                id: 'vscode.provideOutgoingCalls'\n            },\n            {\n                execute: ((item: CallHierarchyItem) =>\n                    commands.executeCommand<CallHierarchyOutgoingCall[]>('_executeProvideOutgoingCalls', { item }))\n            }\n        );\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from 'inversify';\nimport { CommandContribution } from '@theia/core';\nimport { PluginVscodeCommandsContribution } from './plugin-vscode-commands-contribution';\n\nexport default new ContainerModule(bind => {\n    bind(PluginVscodeCommandsContribution).toSelf().inSingletonScope();\n    bind(CommandContribution).toDynamicValue(context => context.container.get(PluginVscodeCommandsContribution));\n});\n"],"sourceRoot":""}